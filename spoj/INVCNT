//
//  main.cpp
//  testing
//
//  Created by Tatikella, Abhishek on 20/08/19.
//  Copyright Â© 2019 Tatikella, Abhishek. All rights reserved.
//

#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
#include <stack>
#include <map>

using namespace std;

#define N 2123
#define ff first
#define ss second

template <class type> class Fenwick {
public:
    type tree[N+1];
    int n;
    
    type get(int idx) {
        type sum = 0;
        while(idx) {
            sum += tree[idx];
            idx -= (idx&-idx);
        }
        return sum;
    }
    
    void update(int idx,type val) {
        while(idx <= n) {
            tree[idx] += val;
            idx += (idx&-idx);
        }
    }
    
    void init(int n) {
        this->n = n;
        for(int i=0;i<=n;i++) tree[i]=0;
    }
};

int main(int argc, const char * argv[]) {

    Fenwick<int> bit;
    
    int t;
    cin >> t;
    
    while(t--) {
        
        int n;
        cin >> n;
        
        vector < int > vi;
        int val;
        for(int i = 0;i < n; i++) {
            cin >> val;
            vi.push_back(val);
        }
        
        bit.init(N);
        long long ans = 0;
        for(int i = vi.size() - 1;i >= 0; i--) {
            ans += bit.get(vi[i] - 1);
            bit.update(vi[i], 1);
        }
        
        
        cout << ans << endl;
    }

    return 0;
}


